AWSTemplateFormatVersion: '2010-09-09'
Resources:
  PostAPI:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: FleaMART Listings API
      Description: APIs for FleaMART Listings management
      EndpointConfiguration:
        Types:
        - REGIONAL
      Body:
        swagger: "2.0"
        info:
          description: "To create and management listings on fleaMART"
          version: "2022-04-02T05:54:36Z"
          title: "listing-service"
        host: "cw1cjk9o7j.execute-api.us-east-1.amazonaws.com"
        basePath: "/test"
        schemes:
        - "https"
        paths:
          /listing:
            get:
              produces:
              - "application/json"
              responses:
                "200":
                  description: "200 response"
                  schema:
                    $ref: "#/definitions/Empty"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                "404":
                  description: "404 response"
              x-amazon-apigateway-integration:
                httpMethod: "GET"
                uri: "http://postmanagement-env.eba-cfgvegew.us-east-1.elasticbeanstalk.com/listing"
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                passthroughBehavior: "when_no_match"
                type: "http_proxy"
            post:
              produces:
              - "application/json"
              parameters:
              - name: "Content-Type"
                in: "header"
                required: false
                type: "string"
              - name: "Accept"
                in: "header"
                required: false
                type: "string"
              responses:
                "200":
                  description: "200 response"
                  schema:
                    $ref: "#/definitions/Empty"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                "201":
                  description: "201 response"
                  schema:
                    $ref: "#/definitions/Empty"
                "400":
                  description: "400 response"
                  schema:
                    $ref: "#/definitions/Empty"
              x-amazon-apigateway-integration:
                httpMethod: "POST"
                uri: "http://postmanagement-env.eba-cfgvegew.us-east-1.elasticbeanstalk.com/listing"
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                requestParameters:
                  integration.request.header.Accept: "method.request.header.Accept"
                  integration.request.header.Content-Type: "method.request.header.Content-Type"
                passthroughBehavior: "when_no_match"
                type: "http_proxy"
            options:
              consumes:
              - "application/json"
              produces:
              - "application/json"
              responses:
                "200":
                  description: "200 response"
                  schema:
                    $ref: "#/definitions/Empty"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                    Access-Control-Allow-Methods:
                      type: "string"
                    Access-Control-Allow-Headers:
                      type: "string"
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS,POST'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                requestTemplates:
                  application/json: "{\"statusCode\": 200}"
                passthroughBehavior: "when_no_match"
                type: "mock"
          /listing/user/{userId}:
            get:
              produces:
              - "application/json"
              parameters:
              - name: "userId"
                in: "path"
                required: true
                type: "string"
              responses:
                "200":
                  description: "200 response"
                  schema:
                    $ref: "#/definitions/Empty"
                "404":
                  description: "404 response"
              x-amazon-apigateway-integration:
                httpMethod: "GET"
                uri: "http://postmanagement-env.eba-cfgvegew.us-east-1.elasticbeanstalk.com/listing/user/{userId}"
                responses:
                  default:
                    statusCode: "200"
                requestParameters:
                  integration.request.path.userId: "method.request.path.userId"
                passthroughBehavior: "when_no_match"
                type: "http_proxy"
          /listing/{postId}:
            get:
              produces:
              - "application/json"
              parameters:
              - name: "postId"
                in: "path"
                required: true
                type: "string"
              responses:
                "200":
                  description: "200 response"
                  schema:
                    $ref: "#/definitions/Empty"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                "404":
                  description: "404 response"
              x-amazon-apigateway-integration:
                httpMethod: "GET"
                uri: "http://postmanagement-env.eba-cfgvegew.us-east-1.elasticbeanstalk.com/listing/{postId}"
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                requestParameters:
                  integration.request.path.postId: "method.request.path.postId"
                passthroughBehavior: "when_no_match"
                type: "http_proxy"
            put:
              produces:
              - "application/json"
              parameters:
              - name: "postId"
                in: "path"
                required: true
                type: "string"
              - name: "Content-Type"
                in: "header"
                required: false
                type: "string"
              - name: "Accept"
                in: "header"
                required: false
                type: "string"
              responses:
                "200":
                  description: "200 response"
                  schema:
                    $ref: "#/definitions/Empty"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                "400":
                  description: "400 response"
                "404":
                  description: "404 response"
              x-amazon-apigateway-integration:
                httpMethod: "PUT"
                uri: "http://postmanagement-env.eba-cfgvegew.us-east-1.elasticbeanstalk.com/listing/{postId}"
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                requestParameters:
                  integration.request.header.Accept: "method.request.header.Accept"
                  integration.request.path.postId: "method.request.path.postId"
                  integration.request.header.Content-Type: "method.request.header.Content-Type"
                passthroughBehavior: "when_no_match"
                type: "http_proxy"
            options:
              consumes:
              - "application/json"
              produces:
              - "application/json"
              parameters:
              - name: "postId"
                in: "path"
                required: true
                type: "string"
              responses:
                "200":
                  description: "200 response"
                  schema:
                    $ref: "#/definitions/Empty"
                  headers:
                    Access-Control-Allow-Origin:
                      type: "string"
                    Access-Control-Allow-Methods:
                      type: "string"
                    Access-Control-Allow-Headers:
                      type: "string"
              x-amazon-apigateway-integration:
                responses:
                  default:
                    statusCode: "200"
                    responseParameters:
                      method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS,PUT'"
                      method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
                      method.response.header.Access-Control-Allow-Origin: "'*'"
                requestTemplates:
                  application/json: "{\"statusCode\": 200}"
                passthroughBehavior: "when_no_match"
                type: "mock"
        definitions:
          Empty:
            type: "object"
            title: "Empty Schema"
        x-amazon-apigateway-binary-media-types:
        - "multipart/form-data"
   
  PostApiDeployment:
    Type: AWS::ApiGateway::Deployment
    Properties:
        Description: Deployment for Post API
        RestApiId: !Ref PostAPI
    
  ApiGatewayStage:
    Type: AWS::ApiGateway::Stage
    Properties:
        DeploymentId: !Ref PostApiDeployment
        Description: Prod stage deployment of Post Management REST API
        RestApiId: !Ref PostAPI
        StageName: 'prod'